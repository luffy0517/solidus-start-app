<div class="address-inputs">
  <div class="text-input">
    <% generate_address_id(form, "name").tap do |name_id| %>
      <%= label_tag name_id, "#{I18n.t("spree.name")}:" %>

      <%= text_field_tag "#{form.object_name}[name]",
        address.name,
        id: name_id,
        required: true,
        autofocus: true,
        autocomplete: "#{address_type} given-name"
      %>
    <% end %>
  </div>

  <% if Spree::Config[:company] %>
    <div class="text-input">
      <%= label_tag :todo, "#{I18n.t("spree.company")}:" %>

      <%= text_field_tag "#{form.object_name}[company]",
        address.company,
        id: :todo,
        autocomplete: "#{address_type} organization"
      %>
    </div>
  <% end %>

  <div class="text-input">
    <% generate_address_id(form, "address1").tap do |address1_id| %>
      <%= label_tag address1_id, "#{I18n.t("spree.street_address")}:" %>

      <%= text_field_tag "#{form.object_name}[address1]",
        address.address1,
        id: address1_id,
        required: true,
        autocomplete: "#{address_type} address-line1"
      %>
    <% end %>
  </div>

  <%= render(
    "spree/components/forms/inputs/text",
    autocomplete: "#{address_type} address-line2",
    id: generate_address_id(form, "address2"),
    label: I18n.t("spree.street_address_2"),
    name: "#{form.object_name}[address2]",
    value: address.address2
  ) %>

  <%= render(
    "spree/components/forms/inputs/text",
    autocomplete: "#{address_type} address-level2",
    id: generate_address_id(form, "city"),
    label: I18n.t("spree.city"),
    name: "#{form.object_name}[city]",
    required: true,
    value: address.city
  ) %>

  <%= render(
    "spree/components/forms/inputs/collection_select",
    autocomplete: "#{address_type} country-name",
    collection: available_countries,
    form: form,
    id: generate_address_id(form, "country_id"),
    input_class: "js-trigger-state-change",
    label: t("spree.country"),
    method: :country_id,
    required: true,
    state_container: "##{address_type} .js-address-fields",
    text_method: :name,
    value_method: :id
  ) %>

  <% if Spree::Config[:address_requires_state] %>
    <% have_states = !address.country.states.empty? %>

    <span class="js-address-fields" style="display: none;">
      <%= render(
        "spree/components/forms/inputs/collection_select",
        autocomplete: "#{address_type} address-level1",
        collection: address.country.states,
        disabled: !have_states,
        form: form,
        id: generate_address_id(form, "state_id"),
        input_class: "required",
        label: t("spree.state"),
        method: :state_id,
        options: { include_blank: true },
        text_method: :name,
        value_method: :id
      ) %>
      <%= form.text_field(
        :state_name,
        class: !have_states ? 'required' : '',
        style: have_states ? 'display: none;' : '',
        disabled: have_states,
        autocomplete: "#{address_type} address-level1"
      ) %>
    </span>
    <noscript>
      <%= form.text_field(
        :state_name,
        class: 'required',
        autocomplete: "#{address_type} address-level1",
        required: true
      ) %>
    </noscript>
  <% end %>

  <%= render(
    "spree/components/forms/inputs/text",
    autocomplete: "#{address_type} postal-code",
    id: generate_address_id(form, "zipcode"),
    label: I18n.t("spree.zip"),
    name: "#{form.object_name}[zipcode]",
    required: address.require_zipcode?,
    value: address.zipcode
  ) %>

  <%= render(
    "spree/components/forms/inputs/text",
    autocomplete: "#{address_type} home tel",
    id: generate_address_id(form, "phone"),
    label: I18n.t("spree.phone"),
    name: "#{form.object_name}[phone]",
    required: address.require_phone?,
    type: :tel,
    value: address.phone
  ) %>

  <% if Spree::Config[:alternative_shipping_phone] %>
    <%= render(
      "spree/components/forms/inputs/text",
      autocomplete: "#{address_type} tel",
      id: generate_address_id(form, "alternative_phone"),
      label: I18n.t("spree.alternative_phone"),
      name: "#{form.object_name}[alternative_phone]",
      type: :tel,
      value: address.alternative_phone
    ) %>
  <% end %>
</div>
